{
  "id": "deploy-ai-solutions-azure-app-service",
  "title": "Deploy AI solutions with Azure App Service",
  "level": "intermediate",
  "roles": [
    "ai-engineer",
    "azure-developer",
    "solutions-architect"
  ],
  "products": [
    "Azure App Service",
    "Azure OpenAI Service",
    "Azure AI Services",
    "Azure Container Registry",
    "Azure Application Insights"
  ],
  "subjects": [
    "artificial-intelligence",
    "cloud-computing",
    "web-development"
  ],
  "prerequisites": [
    "Familiarity with Azure fundamentals and the Azure portal",
    "Basic understanding of RESTful APIs and web application architecture",
    "Experience with at least one programming language (Python, C#, or JavaScript)",
    "Completion of Microsoft Learn module: 'Introduction to Azure App Service' or equivalent knowledge"
  ],
  "summary": "Learn to deploy and scale AI-powered applications using Azure App Service. Configure hosting environments, integrate Azure AI services, implement authentication, and monitor production workloads for intelligent solutions.",
  "modules": [
    {
      "id": "deploy-ai-solutions-azure-app-service-module",
      "title": "Deploy and manage AI applications on Azure App Service",
      "description": "Enable AI engineers and developers to deploy intelligent applications using Azure App Service. Configure hosting plans, integrate Azure OpenAI Service and Azure AI Services, implement secure authentication, and establish monitoring for production AI workloads.",
      "learningObjectives": [
        "Evaluate Azure App Service deployment options for AI applications and select appropriate hosting plans",
        "Configure Azure App Service to securely integrate Azure OpenAI Service and Azure AI Services",
        "Implement managed identity authentication to connect AI services without storing credentials",
        "Monitor AI application performance and costs using Azure Application Insights and App Service diagnostics"
      ],
      "estimatedDurationMinutes": 58,
      "yml": "### YamlMime:Module\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module\nmetadata:\n  title: Deploy and manage AI applications on Azure App Service\n  description: Enable AI engineers and developers to deploy intelligent applications using Azure App Service. Configure hosting plans, integrate Azure OpenAI Service and Azure AI Services, implement secure authentication, and establish monitoring for production AI workloads. Learn to evaluate deployment options, configure secure service integration, implement managed identity authentication, and monitor AI application performance and costs.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.service: azure-app-service\n  ms.topic: module-standard-task-based\ntitle: Deploy and manage AI applications on Azure App Service\nsummary: Enable AI engineers and developers to deploy intelligent applications using Azure App Service. Configure hosting plans, integrate Azure OpenAI Service and Azure AI Services, implement secure authentication, and establish monitoring for production AI workloads.\nabstract: |\n  By the end of this module, you'll be able to:\n  - Evaluate Azure App Service deployment options for AI applications and select appropriate hosting plans\n  - Configure Azure App Service to securely integrate Azure OpenAI Service and Azure AI Services\n  - Implement managed identity authentication to connect AI services without storing credentials\n  - Monitor AI application performance and costs using Azure Application Insights and App Service diagnostics\nprerequisites: |\n  - Familiarity with Azure fundamentals and the Azure portal\n  - Basic understanding of RESTful APIs and web application architecture\n  - Experience with at least one programming language (Python, C#, or JavaScript)\n  - Completion of Microsoft Learn module: 'Introduction to Azure App Service' or equivalent knowledge\niconUrl: /learn/achievements/generic-badge.svg\nlevels:\n  - intermediate\nroles:\n  - ai-engineer\n  - developer\n  - solution-architect\nproducts:\n  - azure-app-service\n  - azure-openai\n  - azure-ai-services\n  - azure-monitor\nsubjects:\n  - artificial-intelligence\n  - cloud-computing\nunits:\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.introduction\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.evaluate-app-service-ai-workloads\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.configure-ai-service-integration\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.implement-secure-authentication\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.exercise-deploy-ai-app\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.knowledge-check\n  - learn.wwl.deploy-ai-solutions-azure-app-service-module.summary\nbadge:\n  uid: learn.wwl.deploy-ai-solutions-azure-app-service-module.badge",
      "units": [
        {
          "id": "introduction",
          "title": "Introduction",
          "type": "introduction",
          "description": "Scenario-driven introduction presenting a retail company deploying an AI-powered product recommendation engine. Covers the business challenge of scaling intelligent applications, the value of Azure App Service for AI workloads, module roadmap, and prerequisite confirmation.",
          "estimatedDurationMinutes": 5,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.introduction\ntitle: Introduction\nmetadata:\n  title: Introduction\n  description: Scenario-driven introduction presenting a retail company deploying an AI-powered product recommendation engine. Covers the business challenge of scaling intelligent applications, the value of Azure App Service for AI workloads, module roadmap, and prerequisite confirmation.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 5\ncontent: |\n  [!include[](includes/1-introduction.md)]",
          "diagramMermaid": null,
          "diagramCaption": null,
          "diagramAltText": null,
          "comparisonTable": null,
          "comparisonTableCaption": null,
          "images": [],
          "imageSuggestions": [
            {
              "title": "AI-powered web application architecture overview",
              "description": "High-level architecture diagram showing Azure App Service hosting a web application that integrates with Azure OpenAI Service for product recommendations and Azure AI Services for image analysis, with Application Insights monitoring the solution and users accessing through a web browser"
            }
          ],
          "videoSuggestions": [],
          "interactiveSuggestions": [],
          "visualAccessibilityNotes": "Provide detailed alt text describing the architectural flow from end users through Azure App Service to AI services, emphasizing the monitoring layer and data flow for screen reader users."
        },
        {
          "id": "evaluate-app-service-ai-workloads",
          "title": "Evaluate Azure App Service deployment options for AI workloads",
          "type": "concept",
          "description": "Explain Azure App Service hosting plans (Basic, Standard, Premium, Isolated) with job-focused guidance on selecting appropriate tiers for AI applications. Cover performance requirements driven by AI service call volumes, cost optimization through right-sizing, deployment slots for testing AI model updates, and auto-scaling considerations when request patterns fluctuate. Address reliability implications of tier selection and operations team responsibilities for capacity planning.",
          "estimatedDurationMinutes": 10,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.evaluate-app-service-ai-workloads\ntitle: Evaluate Azure App Service deployment options for AI workloads\nmetadata:\n  title: Evaluate Azure App Service deployment options for AI workloads\n  description: Explain Azure App Service hosting plans with job-focused guidance on selecting appropriate tiers for AI applications. Cover performance requirements, cost optimization, deployment slots, and auto-scaling considerations for AI workloads.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 10\ncontent: |\n  [!include[](includes/2-evaluate-app-service-ai-workloads.md)]",
          "diagramMermaid": "graph TD\n    A[User Request] --> B[Azure App Service]\n    B --> C{Hosting Plan Selection}\n    C -->|Development/Test| D[Basic Tier<br/>Manual scaling<br/>$55-220/mo]\n    C -->|Production| E[Standard Tier<br/>Auto-scale 10 instances<br/>Deployment slots<br/>$75-300/mo]\n    C -->|High-volume AI| F[Premium Tier<br/>Auto-scale 30 instances<br/>VNet integration<br/>$150-600/mo]\n    C -->|Enterprise/Compliance| G[Isolated Tier<br/>Dedicated environment<br/>Auto-scale 100 instances<br/>$680+/mo]\n    E --> H[Azure OpenAI Service]\n    F --> H\n    G --> H\n    E --> I[Auto-scaling Triggers]\n    I --> J[CPU Threshold]\n    I --> K[Memory Pressure]\n    I --> L[HTTP Queue Length]",
          "diagramCaption": "Azure App Service hosting plan decision flow for AI application deployment",
          "diagramAltText": "Decision tree diagram showing user requests flowing to Azure App Service, which branches into four hosting plan tiers: Basic for development and testing with manual scaling and monthly costs of $55-220; Standard for production workloads with auto-scaling up to 10 instances, deployment slots, and costs of $75-300; Premium for high-volume AI applications with auto-scaling up to 30 instances, VNet integration, and costs of $150-600; and Isolated for enterprise compliance scenarios with dedicated environments, auto-scaling up to 100 instances, and costs starting at $680. Standard, Premium, and Isolated tiers connect to Azure OpenAI Service. Auto-scaling triggers include CPU threshold, memory pressure, and HTTP queue length metrics.",
          "comparisonTable": {
            "headers": [
              "Hosting Plan",
              "AI Workload Fit",
              "Scaling Capability",
              "Key Features for AI Apps",
              "Typical Monthly Cost"
            ],
            "rows": [
              [
                "Basic",
                "Development, testing AI prototypes with low request volumes (under 1,000 requests/day)",
                "Manual scale up to 3 instances",
                "Custom domains, manual SSL; suitable for validating AI service integration before production",
                "$55-$220"
              ],
              [
                "Standard",
                "Production AI applications with moderate traffic (1,000-50,000 requests/day, under 2-second response target)",
                "Auto-scale up to 10 instances based on CPU, memory, or HTTP queue",
                "Deployment slots for testing AI model updates; daily backups; supports 99.95% SLA",
                "$75-$300"
              ],
              [
                "Premium",
                "High-volume AI services requiring consistent sub-second response times (50,000+ requests/day)",
                "Auto-scale up to 30 instances with advanced metrics",
                "VNet integration for private AI service endpoints; faster scaling response; dedicated compute reduces noisy neighbor risk",
                "$150-$600"
              ],
              [
                "Isolated",
                "Enterprise AI solutions with strict compliance, data residency, or security requirements",
                "Auto-scale up to 100 instances within dedicated environment",
                "Fully isolated network; private environment; advanced DDoS protection; required for regulated industries deploying AI",
                "$680+"
              ]
            ]
          },
          "comparisonTableCaption": "Comparison of Azure App Service hosting plans for AI application deployment scenarios",
          "images": [],
          "imageSuggestions": [
            {
              "title": "App Service plan selection in Azure portal",
              "description": "Screenshot of the Azure portal Create App Service Plan page with the Standard tier selected, highlighting the pricing tier dropdown, instance count slider, and estimated monthly cost calculator for a production AI workload"
            }
          ],
          "videoSuggestions": [
            {
              "title": "Selecting the right hosting plan for AI workloads",
              "description": "2-minute video demonstrating how to evaluate expected AI service call volume, response time requirements, and budget constraints to choose between Standard and Premium tiers for a production recommendation engine"
            }
          ],
          "interactiveSuggestions": [
            {
              "title": "Hosting plan decision tool for AI applications",
              "description": "Interactive calculator where learners input expected daily request volume, target response time, budget range, and compliance requirements to receive a recommended App Service tier with cost justification and scaling configuration"
            }
          ],
          "visualAccessibilityNotes": "Ensure the decision tree diagram clearly describes each tier's characteristics and cost range. The comparison table should use proper table markup with headers to enable screen readers to navigate rows and columns effectively."
        },
        {
          "id": "configure-ai-service-integration",
          "title": "Configure secure integration with Azure AI services",
          "type": "concept",
          "description": "Provide job-focused guidance on configuring Azure App Service to integrate Azure OpenAI Service and Azure AI Services securely. Explain application settings for storing service endpoints, demonstrate Key Vault references to protect API keys, and cover network security configurations including private endpoints for compliance scenarios. Address operations team responsibilities for monitoring configuration drift and security team requirements for secret rotation. Include decision criteria for when to use Key Vault versus managed identity.",
          "estimatedDurationMinutes": 12,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.configure-ai-service-integration\ntitle: Configure secure integration with Azure AI services\nmetadata:\n  title: Configure secure integration with Azure AI services\n  description: Provide job-focused guidance on configuring Azure App Service to integrate Azure OpenAI and Azure AI Services securely using application settings, Key Vault references, and network security controls.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 12\ncontent: |\n  [!include[](includes/3-configure-ai-service-integration.md)]",
          "diagramMermaid": "sequenceDiagram\n    participant User\n    participant AppService as Azure App Service\n    participant KeyVault as Azure Key Vault\n    participant OpenAI as Azure OpenAI Service\n    participant AIServices as Azure AI Services\n    participant AppInsights as Application Insights\n    \n    User->>AppService: HTTPS Request (product query)\n    AppService->>KeyVault: Retrieve OpenAI API Key<br/>(using Key Vault reference)\n    KeyVault-->>AppService: Return Secret Value\n    AppService->>OpenAI: Generate Recommendations<br/>(with API key)\n    OpenAI-->>AppService: AI Response (product list)\n    AppService->>AIServices: Analyze Product Images<br/>(with managed identity)\n    AIServices-->>AppService: Image Analysis Results\n    AppService->>AppInsights: Log Telemetry<br/>(latency, tokens used)\n    AppService-->>User: Combined Response<br/>(recommendations + images)\n    AppInsights->>AppInsights: Track AI Service Dependencies",
          "diagramCaption": "Secure integration sequence showing Azure App Service retrieving secrets from Key Vault and calling AI services with telemetry logging",
          "diagramAltText": "Sequence diagram illustrating a secure AI application request flow. A user sends an HTTPS request for product recommendations to Azure App Service. App Service retrieves the Azure OpenAI API key from Azure Key Vault using a Key Vault reference, then calls Azure OpenAI Service to generate product recommendations. Next, App Service uses managed identity to call Azure AI Services for image analysis. App Service logs telemetry including latency and token usage to Application Insights, then returns the combined AI-powered response to the user. Application Insights tracks all AI service dependencies throughout the flow.",
          "comparisonTable": {
            "headers": [
              "Configuration Method",
              "Security Level",
              "Use Case",
              "Operations Overhead",
              "Setup Time"
            ],
            "rows": [
              [
                "Application Settings (plain text API keys)",
                "Low - Secrets visible in portal; not recommended for production AI workloads",
                "Quick prototyping or development environments only; acceptable risk for non-production data",
                "Minimal - no secret rotation infrastructure needed",
                "5 minutes"
              ],
              [
                "Application Settings with Key Vault references",
                "High - Secrets stored in Key Vault; access logged; supports automatic rotation",
                "Production AI applications requiring secret management; compliance scenarios needing audit trails for API key access",
                "Moderate - requires Key Vault setup and access policy configuration; security team owns rotation schedule",
                "15-20 minutes"
              ],
              [
                "Managed Identity (no secrets)",
                "Highest - No secrets stored anywhere; Azure AD handles authentication; eliminates credential leakage risk",
                "Production AI applications where supported (Azure OpenAI, Azure AI Services); preferred method for security-sensitive workloads",
                "Low - no secret rotation; security team assigns RBAC roles; operations team monitors identity assignment drift",
                "10 minutes"
              ],
              [
                "Private Endpoints with VNet integration",
                "Highest - Traffic never leaves Microsoft backbone; required for regulatory compliance (HIPAA, PCI-DSS)",
                "Enterprise AI solutions with strict data residency or network isolation requirements; financial services, healthcare",
                "High - network team configures VNets, subnets, DNS; ongoing monitoring of private link connectivity",
                "45-60 minutes"
              ]
            ]
          },
          "comparisonTableCaption": "Comparison of secure configuration methods for integrating AI services with Azure App Service, including security level, use cases, and operational considerations",
          "images": [],
          "imageSuggestions": [
            {
              "title": "Application Settings with Key Vault reference",
              "description": "Screenshot of Azure App Service Configuration blade showing an application setting named OPENAI_API_KEY with a Key Vault reference value (@Microsoft.KeyVault(SecretUri=https://...)) and a green checkmark indicating successful secret retrieval"
            },
            {
              "title": "Private endpoint configuration",
              "description": "Screenshot showing the Networking blade of an App Service with VNet Integration enabled and a private endpoint connection listed for Azure OpenAI Service with status 'Approved'"
            }
          ],
          "videoSuggestions": [],
          "interactiveSuggestions": [
            {
              "title": "Configuration security assessment",
              "description": "Interactive module presenting three AI application scenarios (development prototype, production SaaS app, healthcare patient portal) where learners select the appropriate configuration method and explain security or compliance justifications for their choice"
            }
          ],
          "visualAccessibilityNotes": "Describe each step in the sequence diagram with emphasis on the security mechanisms: Key Vault reference retrieval, managed identity authentication, and telemetry logging. Ensure comparison table relationships between security level and use case are clear for assistive technology."
        },
        {
          "id": "implement-secure-authentication",
          "title": "Implement managed identity authentication for AI services",
          "type": "concept",
          "description": "Explain how to enable system-assigned and user-assigned managed identities for Azure App Service and grant role-based access control (RBAC) permissions to Azure OpenAI Service and Azure AI Services. Cover when to choose each identity type based on resource sharing needs, demonstrate assigning Cognitive Services OpenAI User and Cognitive Services User roles, and show how to update application code to use DefaultAzureCredential. Address security team responsibilities for reviewing RBAC assignments and operations team tasks for auditing identity usage patterns.",
          "estimatedDurationMinutes": 11,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.implement-secure-authentication\ntitle: Implement managed identity authentication for AI services\nmetadata:\n  title: Implement managed identity authentication for AI services\n  description: Explain how to enable managed identities for Azure App Service, grant RBAC permissions to AI services, and update application code to eliminate credential management.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 11\ncontent: |\n  [!include[](includes/4-implement-secure-authentication.md)]",
          "diagramMermaid": "graph TB\n    subgraph App Service Environment\n        A[Azure App Service<br/>Product Recommendation App]\n        A1[System-assigned Identity<br/>Lifecycle tied to App Service]\n        A2[User-assigned Identity<br/>Shared across resources]\n        A -->|Enables| A1\n        A -->|Assigns| A2\n    end\n    \n    subgraph Azure Active Directory\n        B[Azure AD Identity Management]\n        A1 -->|Registers with| B\n        A2 -->|Registers with| B\n    end\n    \n    subgraph AI Services\n        C[Azure OpenAI Service]\n        D[Azure AI Vision]\n        E[Azure Key Vault]\n    end\n    \n    subgraph RBAC Assignments\n        F[Cognitive Services OpenAI User]\n        G[Cognitive Services User]\n        H[Key Vault Secrets User]\n    end\n    \n    B -->|RBAC Role Assignment| F\n    B -->|RBAC Role Assignment| G\n    B -->|RBAC Role Assignment| H\n    F -->|Grants Access to| C\n    G -->|Grants Access to| D\n    H -->|Grants Access to| E\n    \n    A -->|Authenticates to| C\n    A -->|Authenticates to| D\n    A -->|Authenticates to| E",
          "diagramCaption": "Managed identity authentication architecture showing Azure App Service using system-assigned or user-assigned identities with RBAC role assignments to access AI services without storing credentials",
          "diagramAltText": "Architecture diagram showing Azure App Service with both system-assigned and user-assigned managed identities. System-assigned identity lifecycle is tied to the App Service resource, while user-assigned identity can be shared across multiple resources. Both identity types register with Azure Active Directory. Azure AD grants RBAC role assignments: Cognitive Services OpenAI User for Azure OpenAI Service access, Cognitive Services User for Azure AI Vision access, and Key Vault Secrets User for Azure Key Vault access. The diagram emphasizes that App Service authenticates to all three services using managed identity, eliminating the need to store API keys or connection strings in application code or configuration.",
          "comparisonTable": {
            "headers": [
              "Managed Identity Type",
              "Lifecycle",
              "Resource Sharing",
              "Best Use Case",
              "Team Responsibility"
            ],
            "rows": [
              [
                "System-assigned",
                "Created and deleted with the App Service resource; cannot exist independently",
                "No - unique to one App Service instance; creates 1:1 relationship between identity and resource",
                "Single AI application with dedicated resources; simplifies identity management when App Service and AI services have matching lifecycles",
                "Development team enables during App Service creation; security team assigns RBAC roles; operations team monitors in resource activity logs"
              ],
              [
                "User-assigned",
                "Independent managed resource; persists after App Service deletion; can be pre-created and reused",
                "Yes - same identity can authenticate multiple App Services, Azure Functions, or VMs to shared AI services",
                "Multi-application environment sharing Azure OpenAI deployment; microservices architecture where multiple services need identical AI service permissions; simplifies RBAC when 10+ apps use the same backend",
                "Security team creates and manages identity lifecycle; development team assigns to App Services; operations team audits which resources use each identity"
              ]
            ]
          },
          "comparisonTableCaption": "Comparison of system-assigned and user-assigned managed identities for AI service authentication, including lifecycle, sharing capabilities, and operational responsibilities",
          "images": [],
          "imageSuggestions": [
            {
              "title": "Enable system-assigned managed identity",
              "description": "Screenshot of Azure App Service Identity blade with System assigned tab selected, showing the Status toggle set to On with a green indicator and the Object (principal) ID displayed below"
            },
            {
              "title": "Assign RBAC role to managed identity",
              "description": "Screenshot of Azure OpenAI Service Access Control (IAM) blade showing the Add role assignment wizard with Cognitive Services OpenAI User role selected and a managed identity listed in the Members section with a checkmark"
            },
            {
              "title": "DefaultAzureCredential code pattern",
              "description": "Code snippet showing Python code using Azure Identity library's DefaultAzureCredential to authenticate to Azure OpenAI Service without hardcoded keys, with comments explaining how it automatically tries managed identity authentication first"
            }
          ],
          "videoSuggestions": [
            {
              "title": "Configure managed identity for AI applications",
              "description": "4-minute walkthrough demonstrating how to enable system-assigned managed identity in the Azure portal, navigate to Azure OpenAI Service IAM, assign the Cognitive Services OpenAI User role, and update Python application code to use DefaultAzureCredential instead of API keys"
            }
          ],
          "interactiveSuggestions": [],
          "visualAccessibilityNotes": "Clearly describe the flow from App Service through Azure AD to each AI service, emphasizing RBAC role names and their specific permissions. Ensure the architecture diagram conveys the elimination of stored credentials and the automated authentication process for screen reader users."
        },
        {
          "id": "exercise-deploy-ai-app",
          "title": "Exercise: Deploy and configure an AI-powered web application",
          "type": "exercise",
          "description": "Hands-on exercise where learners deploy a sample product recommendation web application to Azure App Service, configure it to integrate with Azure OpenAI Service using managed identity, and verify successful AI-powered responses. Includes step-by-step instructions for creating an App Service instance on the Standard tier, enabling system-assigned managed identity, granting Cognitive Services OpenAI User role, configuring application settings, deploying code from a provided GitHub repository, testing the recommendation endpoint, reviewing Application Insights telemetry for AI service dependencies, and cleaning up resources to avoid ongoing charges.",
          "estimatedDurationMinutes": 15,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.exercise-deploy-ai-app\ntitle: 'Exercise: Deploy and configure an AI-powered web application'\nmetadata:\n  title: 'Exercise: Deploy and configure an AI-powered web application'\n  description: Hands-on exercise deploying a product recommendation app to Azure App Service with managed identity authentication to Azure OpenAI Service. Includes validation and cleanup steps.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 15\ncontent: |\n  [!include[](includes/5-exercise-deploy-ai-app.md)]",
          "diagramMermaid": null,
          "diagramCaption": null,
          "diagramAltText": null,
          "comparisonTable": null,
          "comparisonTableCaption": null,
          "images": [],
          "imageSuggestions": [
            {
              "title": "Deployed AI application interface",
              "description": "Screenshot of the running product recommendation web application showing an input form where users can enter a product category, a Submit button, and a response section displaying AI-generated product recommendations from Azure OpenAI Service with product names, descriptions, and confidence scores"
            },
            {
              "title": "Application Insights dependency tracking",
              "description": "Screenshot of the Application Insights Performance blade showing a transaction timeline with dependencies highlighted, specifically showing calls to Azure OpenAI Service with response times, success rates, and token usage metrics visible in the details pane"
            },
            {
              "title": "Managed identity RBAC assignment confirmation",
              "description": "Screenshot of the Azure OpenAI Service Access Control (IAM) blade with the Role assignments tab selected, filtering by the App Service's managed identity name, showing the Cognitive Services OpenAI User role assigned with a green checkmark indicating active permission"
            }
          ],
          "videoSuggestions": [],
          "interactiveSuggestions": [
            {
              "title": "Deployment validation checklist",
              "description": "Interactive step-by-step checklist that learners complete as they progress through the exercise, including checkboxes for: App Service created with Standard tier, system-assigned managed identity enabled and Object ID copied, RBAC role assigned to Azure OpenAI, application settings configured with OpenAI endpoint, code deployed successfully, test request returns AI recommendations, Application Insights shows dependency calls, and all resources deleted during cleanup"
            }
          ],
          "visualAccessibilityNotes": "Provide descriptive alt text for all screenshots showing the specific UI elements learners need to locate and interact with, including button labels, field names, and status indicators."
        },
        {
          "id": "knowledge-check",
          "title": "Knowledge check",
          "type": "knowledge-check",
          "description": "Scenario-based assessment with three questions testing learners' ability to select appropriate App Service hosting plans for AI workload requirements, choose secure configuration methods for AI service integration based on compliance and operational constraints, and interpret Application Insights telemetry to diagnose AI application performance issues. Each question presents a realistic job scenario and requires applying concepts from the module to make informed decisions.",
          "estimatedDurationMinutes": 3,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.knowledge-check\ntitle: Knowledge check\nmetadata:\n  title: Knowledge check\n  description: Scenario-based assessment testing learners' ability to select hosting plans, choose secure configuration methods, and interpret monitoring telemetry for AI applications on Azure App Service.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 3\ncontent: |\n  [!include[](includes/6-knowledge-check.md)]",
          "diagramMermaid": null,
          "diagramCaption": null,
          "diagramAltText": null,
          "comparisonTable": null,
          "comparisonTableCaption": null,
          "images": [],
          "imageSuggestions": [],
          "videoSuggestions": [],
          "interactiveSuggestions": [],
          "visualAccessibilityNotes": null
        },
        {
          "id": "summary",
          "title": "Summary",
          "type": "summary",
          "description": "Recap the retail product recommendation scenario and highlight how learners successfully deployed an AI application to Azure App Service with secure managed identity authentication and production monitoring. Summarize key takeaways: evaluating hosting plans based on AI workload performance and cost requirements, configuring secure integration using Key Vault references or managed identity to eliminate credential storage, implementing RBAC role assignments for least-privilege access to AI services, and monitoring AI application health and costs using Application Insights. Recommend next Microsoft Learn modules including 'Scale applications in Azure App Service,' 'Implement Azure Container Apps for AI workloads,' and 'Build CI/CD pipelines for AI applications with Azure DevOps.'",
          "estimatedDurationMinutes": 2,
          "yml": "### YamlMime:ModuleUnit\nuid: learn.wwl.deploy-ai-solutions-azure-app-service-module.summary\ntitle: Summary\nmetadata:\n  title: Summary\n  description: Recap the retail recommendation scenario, highlight key takeaways including hosting plan selection and secure AI integration, and recommend next learning paths for scaling, containerization, and CI/CD.\n  author: github-contributor\n  ms.author: mslearn-contributor\n  ms.date: 01/15/2024\n  ms.topic: unit\ndurationInMinutes: 2\ncontent: |\n  [!include[](includes/7-summary.md)]",
          "diagramMermaid": null,
          "diagramCaption": null,
          "diagramAltText": null,
          "comparisonTable": null,
          "comparisonTableCaption": null,
          "images": [],
          "imageSuggestions": [],
          "videoSuggestions": [],
          "interactiveSuggestions": [],
          "visualAccessibilityNotes": null
        }
      ]
    }
  ],
  "estimatedDurationMinutes": 58
}